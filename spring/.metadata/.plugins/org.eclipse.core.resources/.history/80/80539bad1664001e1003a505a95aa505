package com.example.demo.config;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

    @Autowired
    private UserDetailsService userDetailsService;

    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http
            .csrf().disable()
            .authorizeRequests()
                .antMatchers("/api/users/register").permitAll() // Allow registration endpoint without authentication
                .anyRequest().authenticated()
                .and()
            .formLogin()
                .loginProcessingUrl("/api/login") // URL for login form submission
                .permitAll()
                .and()
            .logout()
                .logoutUrl("/api/logout")
                .permitAll();
    }

    @Autowired
    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {
        auth.userDetailsService(userDetailsService)
            .passwordEncoder(passwordEncoder()); // Configure custom UserDetailsService and PasswordEncoder
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder(); // Use BCryptPasswordEncoder for password hashing
    }
}
