package com.example.demo.controllers;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.models.User;
import com.example.demo.services.UserService;

@RestController
@CrossOrigin(origins="*")
@RequestMapping("/api/user")
public class UserController {
  private static final Logger LOGGER = LoggerFactory.getLogger(UserController.class);

  private final UserService userService;

  @Autowired
  private PasswordEncoder passwordEncoder;
  
  public UserController(UserService userService) {
    this.userService = userService;
  }
  
  @PostMapping("/signup")
  public ResponseEntity<?> signUpUser(@RequestBody User user) {
    if(userService.existsByEmail(user.getEmail()) || userService.existsByUsername(user.getUsername())) {
      return ResponseEntity.status(HttpStatus.BAD_REQUEST)
    		.body("User with the same email or username already exists");
    }
    
    User createdUser = userService.signUpUser(user);
    return ResponseEntity.status(HttpStatus.CREATED)
  		.body(createdUser);
  }
  
  @GetMapping("/all")
  public List<User> getAllUsers() {
    return userService.getAllUsers();
  }
}