<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.context.ConfigurableApplicationContext"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="jakarta.annotation.PostConstruct"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.reactive.PathRequest"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.servlet.PathRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.example.demo.models.User"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="com.example.demo.models.AppUser"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.sql.DataSource"/>
    <fullyQualifiedTypeName name="com.zaxxer.hikari.HikariDataSource"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfiguration"/>
    <fullyQualifiedTypeName name="java.net.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfigurationSource"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.servlet.FilterRegistrationBean"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.CorsFilter"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.UrlBasedCorsConfigurationSource"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="com.example.demo.constants.HttpPaths"/>
    <fullyQualifiedTypeName name="com.example.demo.constants.SecurityConstants"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.dao.DataAccessException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatusCode"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="com.example.demo.repositories.UserRepository"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.example.demo.services.UserService"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.csrf.CsrfTokenRequestAttributeHandler"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.csrf.CookieCsrfTokenRepository"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.csrf.CsrfToken"/>
    <fullyQualifiedTypeName name="com.example.demo.filters.CsrfCookieFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"/>
</qualifiedTypeNameHistroy>
