package com.example.demo.controllers;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.models.User;
import com.example.demo.services.UserService;

@RestController
@CrossOrigin(origins="*")
@RequestMapping("/api/user")
public class UserController {
	private static final Logger LOGGER = LoggerFactory.getLogger(UserController.class);
	private final UserService userService;

  public UserController(UserService userService) {
    this.userService = userService;
  }
  
  @PostMapping("/signup")
  public ResponseEntity<?> signUpUser(@RequestBody User user) {
  	String username = user.getUsername();
  	String email = user.getEmail();
  	
    if(userService.existsByEmail(email) || userService.existsByUsername(username)) {
    	LOGGER.error("\u001B[31m ERROR: User with the same email or username already exists, sign up failed \u001B[0m");

    	return ResponseEntity.status(HttpStatus.BAD_REQUEST)
    		.body("User with the same email or username already exists");
    }
    
    userService.signUpUser(user);
    
		LOGGER.info("\u001B[32m SUCCESS: User " + username +  " has signed up \u001B[0m");
    
    return ResponseEntity.status(HttpStatus.CREATED)
  		.body("User " + username +  " has signed up");
  }
  
  @GetMapping("/all")
  public List<User> getAllUsers() {
    SecurityConstants.PERMITTED_HTTP_PATHS.forEach(System.out::println);

    return userService.getAllUsers();
  }
}